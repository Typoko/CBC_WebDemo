@model ASPNETWebDemo.Models.Kartta


@{
    ViewData["Title"] = "KartanMuunnos";
}

<div class="w-100 pb-1">
    <h3>Input Image:</h3>
    <button onclick="myFunction()" class="float-left">Input Imgur Picture Link</button>
    <input type="text" id="imgPath" class="float-left"><br><br>

    <p>https://i.imgur.com/AbsNs83.jpg</p>
</div>


<img src="@ViewBag.KarttaPath" class="float-left">

<img id="ruutuLaatta" src="~/Textures/huoneRuutuLaatta.png" style="display:none">
<img id="varjo_0" src="~/Textures/huoneRuutuVarjo_0.png" style="display:none">
<img id="varjo_1" src="~/Textures/huoneRuutuVarjo_1.png" style="display:none">
<img id="varjo_2" src="~/Textures/huoneRuutuVarjo_2.png" style="display:none">
<img id="varjo_3" src="~/Textures/huoneRuutuVarjo_3.png" style="display:none">
<img id="varjoKulma_0" src="~/Textures/huoneRuutuVarjoKulma_0.png" style="display:none">
<img id="varjoKulma_1" src="~/Textures/huoneRuutuVarjoKulma_1.png" style="display:none">
<img id="varjoKulma_2" src="~/Textures/huoneRuutuVarjoKulma_2.png" style="display:none">
<img id="varjoKulma_3" src="~/Textures/huoneRuutuVarjoKulma_3.png" style="display:none">
<img id="ruutuTekstuuri" src="~/Textures/ruutuTekstuuri.png" style="display:none">
<img id="30pShadow" src="~/Textures/30pShadow.png" style="display:none">

@*  ="display:none">*@

@*i ja j eri päin koska taulu täytetään vaakatasossa*@
@*
    <table border="0" cellspacing="4" cellpadding="0">
        @for (int j = 0; j < 50; j++)
        {
            <tr>
                @for (int i = 0; i < 50; i++)
                {
                    @if (Model[i, j].OnkoAvoin)
                    {
                        <td bgcolor="#FFFFFF">Tei</td>
                    }
                    else
                    {
                        @if (Model[i, j].Seinat[2])
                        {
                            <td bgcolor="#555555" style="border-bottom:solid 5px #060">Tei</td>
                        }
                        else
                        {
                            <td bgcolor="#555555">Tei</td>
                        }

                    }

                }
            </tr>
        }
    </table>
*@
<canvas id="karttaCanvas" width="@Model.TulosteX" height="@Model.TulosteY" style="background-color:#FFFFFF">
</canvas>

<script>
    var canvasContext = document.getElementById("karttaCanvas").getContext("2d");
    canvasContext.translate(-(@Model.MinX*20), -(@Model.MinY*20));
    //canvasContext.transform(1,0,0,1,-(@Model.MinX*20),-(@Model.MinY*20));
    canvasContext.beginPath();
    canvasContext.fillStyle = "#333333";
    canvasContext.fillRect(0, 0, @((Model.MaxX+1)*20), @((Model.MaxY+1)*20));
</script>

@*@for (int i = Model.MinX; i <= Model.MaxX; i++)
    {
        for (int j = Model.MinY; j <= Model.MaxY; j++)
        {
            if (!Model.RuutuTable[i, j].OnkoAvoin)
            {
                <script>
                    canvasContext.fillRect(@(i * 20), @(j * 20), 20, 20);
                </script>
            }
        }
    }*@

<script>
    canvasContext.stroke();
    canvasContext.beginPath();
    canvasContext.fillStyle = "#555555";
    var ruutuTekstuuri = document.getElementById("ruutuTekstuuri");
    var pShadow = document.getElementById("30pShadow");


</script>

@for (int i = Model.MinX; i <= Model.MaxX; i++)
{
    for (int j = Model.MinY; j <= Model.MaxY; j++)
    {
        if (!Model.RuutuTable[i, j].OnkoAvoin)
        {
            if (Model.RuutuTable[i, j].Seinat[0])
            {
                <script>
                    canvasContext.fillRect(@(i * 20), @(j * 20), 20, 5);
                    canvasContext.drawImage(ruutuTekstuuri, @(i * 20), @(j * 20), 20, 5);
                    //canvasContext.drawImage(pShadow, @(i * 20), @(j * 20), 20, 1);
                    //canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+4), 20, 1);
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[1])
            {
                <script>
                    canvasContext.fillRect(@(i * 20 + 15), @(j * 20), 5, 20);
                    canvasContext.drawImage(ruutuTekstuuri, @(i * 20 + 15), @(j * 20), 5, 20);
                    //canvasContext.drawImage(pShadow, @(i * 20+15), @(j * 20), 1, 20);
                    //canvasContext.drawImage(pShadow, @(i * 20+19), @(j * 20), 1, 20);
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[2])
            {
                <script>
                    canvasContext.fillRect(@(i * 20), @(j * 20+15), 20, 5);
                    canvasContext.drawImage(ruutuTekstuuri, @(i * 20), @(j * 20+15), 20, 5);
                    //canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+15), 20, 1);
                    //canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+19), 20, 1);
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[3])
            {
                <script>
                    canvasContext.fillRect(@(i * 20), @(j * 20), 5, 20);
                    canvasContext.drawImage(ruutuTekstuuri, @(i * 20), @(j * 20), 5, 20);
                    //canvasContext.drawImage(pShadow, @(i * 20), @(j * 20), 1, 20);
                    //canvasContext.drawImage(pShadow, @(i * 20+4), @(j * 20), 1, 20);
                </script>
            }
            if (Model.RuutuTable[i, j].Kulmat[0])
            {
                <script>
                    canvasContext.fillRect(@(i * 20), @(j * 20), 5, 5);
                    canvasContext.drawImage(ruutuTekstuuri, @(i * 20), @(j * 20), 5, 5);
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20), 5, 1);
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20), 1, 5);
                    canvasContext.drawImage(pShadow, @(i * 20+4), @(j * 20), 1, 5);
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+4), 5, 1);
                </script>
            }
            if (Model.RuutuTable[i, j].Kulmat[1])
            {
                <script>
                    canvasContext.fillRect(@(i * 20+15), @(j * 20), 5, 5);
                    canvasContext.drawImage(ruutuTekstuuri, @(i * 20+15), @(j * 20), 5, 5);
                    canvasContext.drawImage(pShadow, @(i * 20+15), @(j * 20), 5, 1);
                    canvasContext.drawImage(pShadow, @(i * 20+15), @(j * 20), 1, 5);
                    canvasContext.drawImage(pShadow, @(i * 20+19), @(j * 20), 1, 5);
                    canvasContext.drawImage(pShadow, @(i * 20+15), @(j * 20+4), 5, 1);
                </script>
            }
            if (Model.RuutuTable[i, j].Kulmat[2])
            {
                <script>
                    canvasContext.fillRect(@(i * 20+15), @(j * 20+15), 5, 5);
                    canvasContext.drawImage(ruutuTekstuuri, @(i * 20+15), @(j * 20+15), 5, 5);
                    canvasContext.drawImage(pShadow, @(i * 20+15), @(j * 20+15), 5, 1);
                    canvasContext.drawImage(pShadow, @(i * 20+15), @(j * 20+15), 1, 5);
                    canvasContext.drawImage(pShadow, @(i * 20+19), @(j * 20+15), 1, 5);
                    canvasContext.drawImage(pShadow, @(i * 20+15), @(j * 20+19), 5, 1);
                </script>
            }
            if (Model.RuutuTable[i, j].Kulmat[3])
            {
                <script>
                    canvasContext.fillRect(@(i * 20), @(j * 20+15), 5, 5);
                    canvasContext.drawImage(ruutuTekstuuri, @(i * 20), @(j * 20+15), 5, 5);
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+15), 5, 1);
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+15), 1, 5);
                    canvasContext.drawImage(pShadow, @(i * 20+4), @(j * 20+15), 1, 5);
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+19), 5, 1);
                </script>
            }
        }
    }
}

<script>
    canvasContext.stroke();
    canvasContext.beginPath();
</script>

@for (int i = Model.MinX; i <= Model.MaxX; i++)
{
    for (int j = Model.MinY; j <= Model.MaxY; j++)
    {
        if (!Model.RuutuTable[i, j].OnkoAvoin)
        {
            if (Model.RuutuTable[i, j].Seinat[0])
            {
                <script>
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20), 20, 1);
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+4), 20, 1);
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[1])
            {
                <script>
                    canvasContext.drawImage(pShadow, @(i * 20+15), @(j * 20), 1, 20);
                    canvasContext.drawImage(pShadow, @(i * 20+19), @(j * 20), 1, 20);
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[2])
            {
                <script>
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+15), 20, 1);
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20+19), 20, 1);
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[3])
            {
                <script>
                    canvasContext.drawImage(pShadow, @(i * 20), @(j * 20), 1, 20);
                    canvasContext.drawImage(pShadow, @(i * 20+4), @(j * 20), 1, 20);
                </script>
            }
        }
    }
}



<script>
    canvasContext.stroke();
    canvasContext.beginPath();
    canvasContext.fillStyle = "#777777";
    var ruutuLaatta = document.getElementById("ruutuLaatta");
    //var varjo_0 = document.getElementById("varjo_0");
    //var varjo_1 = document.getElementById("varjo_1");
    //var varjo_2 = document.getElementById("varjo_2");
    //var varjo_3 = document.getElementById("varjo_3");
</script>

@for (int i = Model.MinX; i <= Model.MaxX; i++)
{
    for (int j = Model.MinY; j <= Model.MaxY; j++)
    {
        if (Model.RuutuTable[i, j].OnkoAvoin)
        {
            <script>
                canvasContext.fillRect(@(i * 20), @(j * 20), 20, 20);
                canvasContext.drawImage(ruutuLaatta, @(i * 20), @(j * 20));
                canvasContext.drawImage(ruutuTekstuuri, @(i * 20), @(j * 20));
            </script>

            if (Model.RuutuTable[i, j].Seinat[0])
            {
                <script>
                    canvasContext.drawImage(varjo_0, @(i * 20), @(j * 20));
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[1])
            {
                <script>
                    canvasContext.drawImage(varjo_1, @(i * 20), @(j * 20));
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[2])
            {
                <script>
                    canvasContext.drawImage(varjo_2, @(i * 20), @(j * 20));
                </script>
            }
            if (Model.RuutuTable[i, j].Seinat[3])
            {
                <script>
                    canvasContext.drawImage(varjo_3, @(i * 20), @(j * 20));
                </script>
            }
            if (Model.RuutuTable[i, j].Kulmat[0])
            {
                <script>
                    canvasContext.drawImage(varjoKulma_0, @(i * 20), @(j * 20));
                </script>
            }
            if (Model.RuutuTable[i, j].Kulmat[1])
            {
                <script>
                    canvasContext.drawImage(varjoKulma_1, @(i * 20), @(j * 20));
                </script>
            }
            if (Model.RuutuTable[i, j].Kulmat[2])
            {
                <script>
                    canvasContext.drawImage(varjoKulma_2, @(i * 20), @(j * 20));
                </script>
            }
            if (Model.RuutuTable[i, j].Kulmat[3])
            {
                <script>
                    canvasContext.drawImage(varjoKulma_3, @(i * 20), @(j * 20));
                </script>
            }
        }
    }
}

<script>
    //var varjoKulma_2 = document.getElementById("varjoKulma_2");
    //canvasContext.drawImage(varjoKulma_2, 160, 140);
    canvasContext.stroke();
    //canvasContext.drawImage(30pShadow, 180, 180, 20, 2);
    //canvasContext.beginPath();
    function myFunction() {
        window.location.href = "\\home\\index\\?imageUrl=" + document.getElementById("imgPath").value;
    }

</script>

@*@for (int i = 0; i < 50; i++)
    {
        for (int j = 0; j < 50; j++)
        {
            if (Model[i, j].OnkoAvoin)
            {
                <script>

                </script>
            }
        }
    }*@


@*<script>
        canvasContext.stroke();
    </script>*@




@*<canvas id="testiCanvas" width="200" height="200" style="background-color:#777777">
    </canvas>

    <script>
        var testiContext = document.getElementById("testiCanvas").getContext("2d");

        testiContext.drawImage(ruutuLaatta, 20, 20);




        //var alphaGradient = testiContext.createLinearGradient(20, 20, 20, 40);
        //testiContext.beginPath();
        //alphaGradient.addColorStop(0, 'rgba(0, 0, 0, 0.3)');
        //alphaGradient.addColorStop(0.5, 'rgba(0, 0, 0, 0)');


        //testiContext.fillStyle = alphaGradient;
        //testiContext.fillRect(0, 0, 200, 200);
        //testiContext.stroke();

        //testiContext.beginPath();
        //alphaGradient.addColorStop(0, 'rgba(0, 0, 0, 1)');
        //alphaGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');
        //testiContext.fillStyle = alphaGradient;
        //testiContext.fillRect(20, 20, 20, 20);
        //testiContext.stroke();
    </script>*@
